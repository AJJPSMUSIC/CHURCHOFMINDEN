/* Designed by Andrew J.Shepherd | plutoneon.com */
/* Base style */
body {
  font-family: 'Courier New', monospace;
  overflow-x: hidden;
  font-size: 2vw;
  padding: 4vh;
  background-color: #a3902a;
  color: #ab6a0f; 
}

$teal: #1EE9DD;

svg {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.front, .back {
  fill: none;
  stroke: $teal;
}

.front {
  stroke-width: 4px;
}

.back {
  stroke-width: 1px;
}

.btn {
  cursor: pointer; 
}

h1, h2, h3, h4, h5, h6 {
		color: #a3902a;
		font-family: "Raleway", Helvetica, sans-serif;
		font-weight: 600;
		letter-spacing: 0.175em;
		line-height: 1.75;
		margin: 0 0 1.5rem 0;
		text-transform: uppercase;
	}

		h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
			color: inherit;
			text-decoration: none;
		}

	h1 {
		font-size: 5rem;
		font-weight: 700;
		padding: 22px;
		letter-spacing: -0.05em;
		line-height: 1.1;
		margin: 0 0 1.5rem 0;
		text-transform: none;
		text-align: center;
	}

	h2 {
		font-size: 1.25rem;
		font-weight: 800;
		margin: 0 0 2rem 0;
	}

	h3 {
		font-size: 0.875rem;
	}

	h4 {
		font-size: 0.875rem;
	}

	h5 {
		font-size: 0.75rem;
	}

	h6 {
		font-size: 0.625rem;
	}

@media screen and (max-width: 736px) {

		h1 {
			font-size: 4.5rem;
			line-height: 1.1;
		}

		h2 {
			font-size: 1.25rem;
			line-height: 1.7;
		}

		h3 {
			font-size: 0.9rem;
		}

		h4 {
			font-size: 0.75rem;
		}

		h5 {
			font-size: 0.675rem;
		}

	}

	@media screen and (max-width: 360px) {

		h1 {
			font-size: 3.75rem;
		}

		h2 {
			font-size: 1.125rem;
		}

		h3 {
			font-size: 0.8rem;
		}

		h4 {
			font-size: 0.675rem;
		}

		h5 {
			font-size: 0.675rem;
		}

	}

	sub {
		font-size: 0.8rem;
		position: relative;
		top: 0.5rem;
	}

	sup {
		font-size: 0.8rem;
		position: relative;
		top: -0.5rem;
	}

	blockquote {
		border-left: solid 0.5rem rgba(144, 144, 144, 0.25);
		font-style: italic;
		margin: 0 0 2rem 0;
		padding: 1rem 0 1rem 2rem;
	}

	code {
		background: rgba(144, 144, 144, 0.1);
		border-radius: 0.325rem;
		font-family: "Courier New", monospace;
		font-size: 0.9rem;
		margin: 0 0.25rem;
		padding: 0.25rem 0.65rem;
	}

	pre {
		-webkit-overflow-scrolling: touch;
		font-family: "Courier New", monospace;
		font-size: 0.9rem;
		margin: 0 0 2rem 0;
		width: 100%;
	}

		pre code {
			display: block;
			line-height: 1.75;
			padding: 1rem 1.5rem;
			overflow-x: auto;
		}

	hr {
		border: 0;
		border-bottom: solid 2px rgba(144, 144, 144, 0.25);
		margin: 3rem 0;
	}

		hr.major {
			margin: 5rem 0;
		}

		@media screen and (max-width: 736px) {

			hr.major {
				margin: 3rem 0;
			}

		}

	ul {
		  margin: 0px;
		  padding: 0px;
		  list-style: none; 
		  color: #ab6a0f; 
		}

	a, a:hover {
		  font-family: 'Brush Script MT', cursive;
		  text-decoration: none;
		  color: #e86181; 
		}

	p {
		  margin-bottom: 20px;
		  line-height: 1.8;
		  color: #ab6a0f; 
		  text-indent: 50px;
		  text-align: justify;
		  letter-spacing: 3px;
		  margin: 0 0 2rem 0;
		  padding: 88px;
		}

/* End Base style */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  width: 100%;
  min-height: 100vh;
  background: #1d0035;
  overflow: hidden;
}

.main {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transform-style: preserve-3d;
  transform: perspective(700px);
}

.box {
  position: absolute;
  transform-style: preserve-3d;
  top: 150px;
}

.box .octahedron {
  position: relative;
  width: 200px;
  height: 200px;
  transform-style: preserve-3d;
  animation: animateOctahedron 20s linear infinite;
}

.box .octahedron .face {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
}

.box .octahedron .face span {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(#fb6200, #fb6200, #c3300f);
  transform: rotateY(calc(45deg * var(--i))) translateZ(100px);
}

@keyframes animateOctahedron {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}

.box .octahedron::before {
  content: '';
  position: absolute;
  width: 400px;
  height: 400px;
  background: #fb6200;
  transform: translateZ(-300px);
  filter: blur(50px);
  box-shadow: 0 0 120px rgba(251, 98, 0, 0.2),
    0 0 200px rgba(251, 98, 0, 0.4),
    0 0 300px rgba(251, 98, 0, 0.6),
    0 0 400px rgba(251, 98, 0, 0.8),
    0 0 500px rgba(251, 98, 0, 1);
}

@import 'compass/css3';

$l: 20em;
$mt: 8s;
$of: .2;
$wirec: silver;

$tri_n: 3;
$tri_ca: 360deg/$tri_n;
$tri_a: ($tri_n - 2)*180deg/$tri_n;
$tri_ra: $tri_a/2;
$tri_sa: 90deg - $tri_a;
$tri_sf: cos($tri_sa);
$tri_h: $l*sin($tri_a);
$tri_rc: ($l/2)/sin($tri_ca/2);
$tri_ri: ($l/2)/tan($tri_ca/2);

$quad_n: 4;
$quad_ca: 360deg/$quad_n;

$octa_n: 8;
$octa_nv: 6;
$octa_rc: $l/sqrt(2);
$octa_ri: $l/sqrt(6);
$octa_rax: 90deg - acos(1/sqrt(3)); 

@mixin size-position($w, $h: $w) {
  margin: if($h == $w, unquote(''), -$h/2) (-$w/2);
  width: $w; height: $h;
}

html, body { height: 100%; }

body {
  overflow: hidden;
  margin: 0;
  perspective-origin: 40% 40%;
  perspective: 32em;
  background: linear-gradient(black, dimgrey);
  color: $wirec;
}

.polyhedron {
  &, & *, & :before, & :after {
    box-sizing: border-box;
    position: absolute;
    top: 50%; left: 50%;
    transform-style: preserve-3d;
  }
  &--octahedron {
    animation: rot 17.38s linear infinite;
  }
  &__face {
    @for $i from 0 to $octa_n {
      &:nth-child(#{$i + 1}) {
        transform: 
          if(floor($i/$quad_n) == 1, rotate(180deg), ()) 
          rotateY(($i%$quad_n)*$quad_ca) 
          rotateX($octa_rax) 
          translateZ($octa_ri);
      }
    }
    @for $i from 0 to $octa_nv {
      &:nth-child(#{$octa_n + $i + 1}) {
        transform: 
          if($i < $quad_n, 
             rotateY(($i - .5)*$quad_ca) rotate($quad_ca/2), 
             rotateX(pow(-1, $i)*$quad_ca)) 
          translateZ($octa_rc)
      }
    }
  }
}


@keyframes rot {
  to { transform: rotateY(360deg); }
}

.transformer {
  animation: ani $mt linear infinite alternate;
  &--vertex {
    animation-name: vertex;
  }
  &--face {
    animation-name: face;
  }
}

@keyframes vertex {
  0%, 12.5% { transform: scale(0) translateZ(0); }
  37.5%, 62.5% { transform: scale(.33) translateZ(-$octa_rc/3); }
  87.5%, 100% { transform: scale(.5) translateZ(-$octa_rc/2); }
}

@keyframes edge {
  0%, 12.5% { background-size: 100% 100%, 100% 100%; }
  37.5%, 62.5% { background-size: 100% 33.3%, 33.3% 100%; }
  87.5%, 100% { background-size: 100% 0, 0 100%; }
}

@keyframes face {
  0%, 12.5% {
    transform: translateY(2*$tri-ri - $tri_h/2) 
      rotate(180deg) scale(2);
  }
  37.5%, 62.5% {
    transform: translateY(2*$tri-ri - $tri_h/2) 
      rotate(180deg) scale(1);
  }
  87.5%, 100% {
    transform: translateY(2*$tri-ri - $tri_h/2) 
      rotate(180deg) scale(.5);
  }
}

.polygon {
  &, &:before {
    overflow: hidden;
    @include size-position($l);
  }
  &--triangle {
    transform: translateY($tri_ri) 
      rotate($tri_ra) skewY($tri_sa) scaleX($tri_sf) ;
    &__b, &:before, &:after {
      overflow: hidden;
      @include size-position($l, $tri-h);
      transform: 
        scaleX(1/$tri_sf) skewY(-$tri_sa) rotate(-$tri_ra) 
        translateY(-50%);
    }
    &:empty {
      border: solid .125em;
      border-right-color: transparent;
      border-bottom-color: transparent;
      &:before {
        border: solid .125e;
        background: linear-gradient(random(360)*1deg, 
          rgba(#B9DBCB, $of), rgba(#54A6BB, $of));
        content: '';
      }
    }
    &.outermorph {
      &, &:after {
        background: linear-gradient(90deg, 
                          $wirec .125em, transparent .125em),
          linear-gradient($wirec .125em, transparent .125em);
        background-position: 50% 50%;
        background-repeat: no-repeat;
        animation: edge $mt linear infinite alternate;
      }
      &:after {
        background-image: linear-gradient(90deg, 
                          $wirec .125em, transparent .125em),
          linear-gradient(0deg, 
                          $wirec .125em, transparent .25em);
        content: '';
      }
    }
  }
  &--square {
    border: solid .125em;
    background: linear-gradient(random(360)*1deg, 
      rgba(#FF893B, $of), rgba(#FBE7CC, $of));
  }
}

body {
  overflow: hidden;
  margin: 0;
  height: 100vh;
  perspective-origin: 65% 35%;
  perspective: 25em;
  background: radial-gradient(at 0 0, #333d35, #0e130d);
}

div {
  position: absolute;
  transform-style: preserve-3d;
}

.a3d {
  top: 50%;
  left: 50%;
}

.s8hedron {
  --k: 0;
  --not-k: calc(1 - var(--k));
  --sgn-k: calc(1 - 2*var(--k));
  --f: calc(var(--k) + var(--not-k)*0.70711);
  --dim: scale3d(var(--f), var(--f), var(--f));
  --ri3d: calc(var(--n-rows)*2.04124vmin);
  transform: var(--dim);
  animation: r 8s linear infinite;
}
.s8hedron__face {
  --i: 0;
  --sgn-i: calc(2*var(--i) - 1);
  display: grid;
  place-content: start center;
  width: calc(var(--n-rows)*5.7735vmin);
  height: calc(var(--n-rows)*5.7735vmin);
  transform: translate(-50%, -50%) rotatey(calc(var(--j)*90deg)) rotatex(calc(var(--sgn-i)*35.26439deg)) translatez(var(--ri3d)) scale(-1, var(--sgn-i));
}
.s8hedron__face:nth-child(4n + 1) {
  --j: 0;
}
.s8hedron__face:nth-child(4n + 2) {
  --j: 1;
}
.s8hedron__face:nth-child(4n + 3) {
  --j: 2;
}
.s8hedron__face:nth-child(4n + 4) {
  --j: 3;
}
.s8hedron__face:nth-child(n + 5) {
  --i: 1;
}
.s8hedron:nth-child(2) {
  --k: 1;
}

@keyframes r {
  to {
    transform: var(--dim) rotatey(calc(var(--sgn-k)*-1turn));
  }
}
.s3gon {
  position: relative;
  grid-column: var(--cidx);
  margin: -0.72169vmin -1.63675vmin;
  width: 5.7735vmin;
  height: 5.7735vmin;
  --ini: scale(calc(var(--not-k) + var(--k)*.9), calc(var(--not-k) + var(--k)*.95));
  transform: var(--ini);
  --dt: calc((var(--cidx)/var(--n-cols) - var(--j))/4*8s - 8s);
  animation: a 4s var(--dt) infinite alternate;
  animation-name: mov, shd;
  animation-timing-function: cubic-bezier(0.22, 1, 0.36, 1), ease-in-out;
}
.s3gon:first-child {
  margin-top: 0;
}
.s3gon::before, .s3gon::after {
  --in: 0;
  --o: calc(var(--in)*5px);
  position: absolute;
  top: var(--o);
  right: var(--o);
  bottom: var(--o);
  left: var(--o);
  transform-origin: 50% calc(2.16506vmin - var(--o));
  transform: rotate(calc((var(--ridx) + var(--cidx) + var(--n-rows) - 1)*.5turn));
  background: greenyellow;
  --poly: polygon(50% 0%, 93.30127% 75%, 6.69873% 75%);
  clip-path: var(--poly);
  filter: hue-rotate(calc(var(--not-k)*15deg)) contrast(calc(1 + var(--not-k)*.5)) brightness(calc(1 - var(--in)*.2 - var(--not-k)*.1)) grayScale(calc(.25*var(--in)));
  content: "";
}
.s3gon::after {
  --in: 1;
}

@keyframes mov {
  0% {
    transform: var(--ini) translatez(calc(var(--k)*(1.5*var(--ridx) - 1)*1.44338vmin)) scale(calc(var(--not-k) + var(--k)*.5));
  }
  100% {
    transform: var(--ini);
  }
}
@keyframes shd {
  to {
    filter: brightness(calc(.2 + .5*(1 + var(--sgn-k))));
  }
}
a {
  --sf: 0;
  position: absolute;
  bottom: .25em;
  left: 50%;
  border: solid .125em currentcolor;
  padding: 0 .5em;
  transform: translate(-50%);
  color: greenyellow;
  font: 1.5em/ 2 ubuntu mono, consolas, monaco, monospace;
  text-align: center;
  text-decoration: none;
}
a::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: -.5px;
  left: 0;
  transform-origin: 0 0;
  transform: scalex(var(--sf));
  background: currentcolor;
  mix-blend-mode: difference;
  transition: transform .3s;
  content: "";
}
a:hover {
  --sf: 1;
}
